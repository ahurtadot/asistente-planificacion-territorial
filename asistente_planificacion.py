import streamlit as st
import os
import openai

# Configurar la clave de API de OpenAI desde variable de entorno
openai.api_key = os.getenv("OPENAI_API_KEY")

# T√≠tulo de la aplicaci√≥n
st.set_page_config(page_title="Asistente de Planificaci√≥n Territorial", layout="centered")
st.title("üß≠ Asistente Inteligente - Instrumentos de Planificaci√≥n Territorial")

# Descripci√≥n general
st.markdown("""
Este asistente apoya a los estudiantes del curso de maestr√≠a en **Planificaci√≥n Urbana y Regional** en tres √°reas clave:
1. üó∫Ô∏è Diagn√≥stico de problemas territoriales en regiones de Colombia  
2. üìú Revisi√≥n normativa comparada en Latinoam√©rica  
3. ‚öñÔ∏è Valoraci√≥n y priorizaci√≥n de instrumentos de planificaci√≥n  
""")

# Selecci√≥n del m√≥dulo
modulo = st.selectbox("Selecciona el m√≥dulo de apoyo:", [
    "Diagn√≥stico Territorial",
    "An√°lisis Normativo Comparado",
    "Valoraci√≥n y Priorizaci√≥n de Instrumentos"
])

# Entrada del usuario
consulta = st.text_area("Escribe tu consulta o informaci√≥n relevante:", height=200)

# Bot√≥n para generar respuesta
if st.button("Generar respuesta"):
    if not openai.api_key:
        st.error("‚ö†Ô∏è No se ha configurado la clave de API de OpenAI. Por favor, config√∫rala como variable de entorno.")
    elif not consulta.strip():
        st.warning("Por favor, escribe una consulta antes de continuar.")
    else:
        # Instrucciones espec√≠ficas por m√≥dulo
        instrucciones = {
            "Diagn√≥stico Territorial": (
                "Act√∫a como experto en planificaci√≥n territorial en Colombia. Ayuda al estudiante a estructurar un diagn√≥stico "
                "de problemas territoriales en una regi√≥n espec√≠fica, considerando aspectos sociales, ambientales, econ√≥micos y normativos."
            ),
            "An√°lisis Normativo Comparado": (
                "Act√∫a como analista normativo latinoamericano. Compara instrumentos de planificaci√≥n territorial en pa√≠ses como "
                "Colombia, M√©xico, Brasil, Chile y Argentina. Resume marcos legales y destaca similitudes y diferencias."
            ),
            "Valoraci√≥n y Priorizaci√≥n de Instrumentos": (
                "Act√∫a como asesor estrat√©gico en planificaci√≥n territorial. Ayuda a valorar instrumentos seg√∫n criterios t√©cnicos, "
                "institucionales, financieros y pol√≠ticos. Sugiere m√©todos de priorizaci√≥n y estrategias de soluci√≥n."
            )
        }

        # Construir el prompt
        prompt = f"""{instrucciones[modulo]}

Consulta del estudiante:
{consulta}"""

        # Llamada a la API de OpenAI
        try:
            respuesta = openai.ChatCompletion.create(
                model="gpt-4",
                messages=[
                    {"role": "system", "content": "Eres un asistente acad√©mico experto en planificaci√≥n territorial."},
                    {"role": "user", "content": prompt}
                ],
                temperature=0.7,
                max_tokens=1000
            )
            texto_respuesta = respuesta['choices'][0]['message']['content']
            st.success("‚úÖ Respuesta generada:")
            st.markdown(texto_respuesta)
        except Exception as e:
            st.error(f"‚ùå Error al generar respuesta: {e}")
